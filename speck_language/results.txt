Przyk쓰d z pliku: 
in(x1);
Output z analizy: 
(start (statement (input_statement in( x1 ) (end_of_statement ;))))
==================================================


Przyk쓰d z pliku: 
if(x1 > 5) {
    x1 = x1 + 1;
}

Output z analizy: 
(start (statement (conditional_statement if( (expression (expression x1) > (expression 5)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 1)) (end_of_statement ;)))) }))))
==================================================


Przyk쓰d z pliku: 
in(x1);
X0 = 10;
if(x1 > X0) {
    x1 = x1 + 1;
}
while(x1 < 15) {
    x1 = x1 + 2;
}
out(x1);

Output z analizy: 
(start (statement (input_statement in( x1 ) (end_of_statement ;))) (statement (assigment_statement (constant_assigment X0 = (expression 10) (end_of_statement ;))))
(statement (conditional_statement if( (expression (expression x1) > (expression X0)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 1)) (end_of_statement ;)))) })))
(statement (loop_statement while( (expression (expression x1) < (expression 15)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 2))
(end_of_statement ;)))) }))) (statement (output_statement out( (expression x1) ) (end_of_statement ;))))
==================================================


Przyk쓰d z pliku: 
x1 = 5;
Output z analizy: 
(start (statement (assigment_statement (variable_assigment x1 = (expression 5) (end_of_statement ;)))))
==================================================


Przyk쓰d z pliku: 
x1 = 5 + 10 * 3;
if(x1 == 35) {
    out(x1);
}
Output z analizy: 
(start (statement (assigment_statement (variable_assigment x1 = (expression (expression 5) + (expression (expression 10) * (expression 3))) (end_of_statement ;))))
(statement (conditional_statement if( (expression (expression x1) == (expression 35)) )
 (program_block { (statement (output_statement out( (expression x1) ) (end_of_statement ;))) }))))
==================================================


Przyk쓰d z pliku: 
in(x1);
if(x1 > 5) {
    x1 = x1 + 1;
}
out(x1);

Output z analizy: 
(start (statement (input_statement in( x1 ) (end_of_statement ;)))
(statement (conditional_statement if( (expression (expression x1) > (expression 5)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 1)) (end_of_statement ;)))) })))
(statement (output_statement out( (expression x1) ) (end_of_statement ;))))
==================================================


Przyk쓰d z pliku: 
in(x1);
x1 = 5;
out(x1);
while(x1 < 10) {
    x1 = x1 + 1;
}

Output z analizy: 
(start (statement (input_statement in( x1 ) (end_of_statement ;)))
(statement (assigment_statement (variable_assigment x1 = (expression 5) (end_of_statement ;))))
(statement (output_statement out( (expression x1) ) (end_of_statement ;)))
(statement (loop_statement while( (expression (expression x1) < (expression 10)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 1)) (end_of_statement ;)))) }))))
==================================================


Przyk쓰d z pliku: 
in(x1);
X0 = 10;
if(x1 > X0) {
    x1 = x1 + 1;
}
out(x1);

Output z analizy: 
(start (statement (input_statement in( x1 ) (end_of_statement ;)))
(statement (assigment_statement (constant_assigment X0 = (expression 10) (end_of_statement ;))))
(statement (conditional_statement if( (expression (expression x1) > (expression X0)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 1)) (end_of_statement ;)))) })))
(statement (output_statement out( (expression x1) ) (end_of_statement ;))))
==================================================


Przyk쓰d z pliku: 
while(x1 < 10) {
    x1 = x1 + 1;
}

Output z analizy: 
(start (statement (loop_statement while( (expression (expression x1) < (expression 10)) )
(program_block { (statement (assigment_statement (variable_assigment x1 = (expression (expression x1) + (expression 1)) (end_of_statement ;)))) }))))
==================================================

